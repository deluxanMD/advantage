# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install

      # Generate code coverage
      - name: Run the tests and generate coverage report
        run: npm test -- --coverage

      - run: npm run format:check
      - run: npm test -- --coverage
        env:
          CI: true

      - name: Upload to codecov
        uses: Wandalen/wretry.action@master
        with:
          action: codecov/codecov-action@v3
          with: |
            token: ${{ secrets.CODECOV_TOKEN }}
            files: *coverage*/lcov.info
            fail_ci_if_error: true
            verbose: true
          attempt_limit: 3
          attempt_delay: 30000

      - name: Build Project
        run: npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy app build to S3 bucket
        run: aws s3 sync ./build s3://${{ secrets.AWS_S3_BUCKET }} --delete

      - name: Invalidate cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/*"

      - name: Build
        run: npm run build
